{"version":3,"sources":["views/admin/data-departemen/DepartemenTable.js","views/admin/data-departemen/DepartemenPage.js"],"names":["CustomHeader","props","className","Button","Ripple","color","onClick","departemenAdd","Input","value","onChange","e","handleFilter","size","ActionsComponent","isView","row","id","cff_id","DepartemenTable","state","modalVisible","modalImage","modalDigimonName","myProfile","modal","modalAdd","namaDepartemen","namaDepartemenAdd","isSweetAlert","sweetAlertTitle","sweetAlertText","sweetAlertType","isSweetAlertConfirm","sweetAlertTitleConfirm","sweetAlertTextConfirm","sweetAlertTypeConfirm","columns","name","selector","sortable","minWidth","cell","title","nama_departemen","toggleModal","data","filteredData","componentDidMount","a","isLogin","tarikDataTable","console","log","toggleModalAdd","setState","prevState","toggleModalAddFix","sql","axios","post","api_query","query","then","result","response","handleAlertConfirm","catch","err","toggleModalFix","text","type","handleAlert","role","undefined","localStorage","getItem","JSON","parse","history","push","res","rows","length","target","filter","item","startsWithCondition","toLowerCase","startsWith","includesCondition","includes","viewSS","this","Card","CardHeader","CardTitle","CardBody","noHeader","pagination","subHeader","subHeaderComponent","Modal","isOpen","toggle","ModalHeader","ModalBody","Label","for","placeholder","val","ModalFooter","show","onConfirm","React","Component","DepartemenPage","changeViewPage","typeView","resultEdit","addPage","editPage","tmp","editData","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm"],"mappings":"6cA+BMA,EAAe,SAAAC,GACnB,OACE,yBAAKC,UAAU,4CAEb,yBAAKA,UAAU,WACb,kBAACC,EAAA,EAAOC,OAAR,CAAeC,MAAM,OAAOH,UAAU,sBAAsBI,QAAS,kBAAML,EAAMM,kBAAjF,sBAEF,yBAAKL,UAAU,wCACb,kBAACM,EAAA,EAAD,CAAOC,MAAOR,EAAMQ,MAAOC,SAAU,SAAAC,GAAC,OAAIV,EAAMW,aAAaD,MAC7D,yBAAKT,UAAU,yBACb,kBAAC,IAAD,CAAQW,KAAK,WAQfC,EAAmB,SAAAb,GACvB,OACE,yBAAKC,UAAU,oBACb,kBAACC,EAAA,EAAOC,OAAR,CAAeF,UAAU,2BAA2BG,MAAM,OAAOQ,KAAK,KACpEP,QAAS,WAEP,OAAOL,EAAMc,OAAOd,EAAMe,IAAKf,EAAMe,IAAIC,GAAIhB,EAAMe,IAAIE,UAH3D,UA+aOC,E,4MAnabC,MAAQ,CACNC,cAAc,EACdC,WAAY,GACZC,iBAAkB,GAClBC,UAAW,KACXC,OAAO,EACPC,UAAU,EACVT,GAAI,EACJU,eAAgB,GAChBC,kBAAmB,GACnBC,cAAc,EACdC,gBAAiB,QACjBC,eAAgB,OAChBC,eAAgB,UAChBC,qBAAqB,EACrBC,uBAAwB,QACxBC,sBAAuB,OACvBC,sBAAuB,UACzBC,QAAS,CACL,CACEC,KAAM,KACNC,SAAU,KACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAA1B,GAAG,OAEP,yBAAKd,UAAU,uFACb,yBAAKA,UAAU,yCACb,0BACEyC,MAAO3B,EAAIC,GACXf,UAAU,4CACTc,EAAIC,QAOf,CACEqB,KAAM,kBACNC,SAAU,kBACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAA1B,GAAG,OACP,yBAAKd,UAAU,uFACb,yBAAKA,UAAU,yCACb,0BACEyC,MAAO3B,EAAI4B,gBACX1C,UAAU,4CACTc,EAAI4B,qBAMf,CACEN,KAAM,UACNE,UAAU,EACVE,KAAM,SAAA1B,GAAG,OAEP,oCACE,kBAAC,EAAD,CACEA,IAAKA,EACLD,OAAQ,EAAK8B,kBAMvBC,KAAM,GACNC,aAAc,GACdtC,MAAO,I,EAGTuC,kB,sBAAkB,sBAAAC,EAAA,sEACV,EAAKC,QAAQ,eADH,uBAEV,EAAKC,iBAFK,2C,EAYlB5C,c,sBAAgB,sBAAA0C,EAAA,6DACdG,QAAQC,IAAI,iBADE,SAER,EAAKC,iBAFG,2C,EAKhBA,eAAiB,SAACR,EAAM7B,GAKtB,EAAKsC,UAAS,SAAAC,GAAS,MAAK,CAC1B9B,UAAW8B,EAAU9B,c,EAIzB+B,kB,sBAAoB,4BAAAR,EAAA,6DAClB,EAAKM,UAAS,SAAAC,GAAS,MAAK,CAC1B9B,UAAW8B,EAAU9B,aAGnBgC,EAAM,iFAEI,EAAKtC,MAAMQ,kBAFf,WAIRwB,QAAQC,IAAI,SAAUK,GATN,SAWGC,IAAMC,KAAKC,IAAW,CACbC,MAAQJ,IAEPK,KAHV,+BAAAd,EAAA,MAGe,WAAMe,GAAN,SAAAf,EAAA,6DACIe,EAAOlB,KAAKmB,SADhB,SAGO,EAAKC,mBAAmB,uBAAuB,EAAM,UAAW,6BAA8B,WAHrG,mFAHf,uDAQQC,MARR,+BAAAlB,EAAA,MAQc,WAAMmB,GAAN,SAAAnB,EAAA,6DACLG,QAAQC,IAAI,WAAYe,GADnB,SAEQ,EAAKF,mBAAmB,uBAAuB,EAAM,SAAU,+BAAgC,UAFvG,mFARd,uDAXH,yD,EA0BpBrB,YAAc,SAACC,EAAM7B,GAKnB,EAAKsC,UAAS,SAAAC,GAAS,MAAK,CAC1B/B,OAAQ+B,EAAU/B,MAClBE,eAAgBmB,EAAKF,gBACrB3B,GAAI6B,EAAK7B,Q,EAIboD,e,sBAAiB,4BAAApB,EAAA,6DACf,EAAKM,UAAS,SAAAC,GAAS,MAAK,CAC1B/B,OAAQ+B,EAAU/B,UAGhBiC,EAAM,mFAGe,EAAKtC,MAAMO,eAH1B,uDAKO,EAAKP,MAAMH,GALlB,SAORmC,QAAQC,IAAI,SAAUK,GAZT,SAcMC,IAAMC,KAAKC,IAAW,CACbC,MAAQJ,IAEPK,KAHV,+BAAAd,EAAA,MAGe,WAAMe,GAAN,SAAAf,EAAA,6DACIe,EAAOlB,KAAKmB,SADhB,SAGO,EAAKC,mBAAmB,uBAAuB,EAAM,UAAW,iCAAkC,WAHzG,mFAHf,uDAQQC,MARR,+BAAAlB,EAAA,MAQc,WAAMmB,GAAN,SAAAnB,EAAA,6DACLG,QAAQC,IAAI,WAAYe,GADnB,SAEQ,EAAKF,mBAAmB,uBAAuB,EAAM,SAAU,8BAA+B,UAFtG,mFARd,uDAdN,yD,EA6BjBA,mB,uCAAqB,WAAM9C,EAAOX,EAAOkC,EAAO2B,EAAMC,GAAjC,SAAAtB,EAAA,0DAEfxC,EAFe,gBAGjB,EAAK8C,SAAL,eAAiBnC,EAASX,IAC1B,EAAK8C,SAAS,CAACrB,uBAAwBS,EAAOR,sBAAuBmC,EAAMlC,sBAAuBmC,IAJjF,6BAMjB,EAAKhB,SAAL,eAAiBnC,EAASX,IANT,SAOX,EAAK0C,iBAPM,2C,gEAkBrBqB,YAAc,SAACpD,EAAOX,EAAOkC,EAAO2B,EAAMC,GAClC9D,GACF,EAAK8C,SAAL,eAAiBnC,EAASX,IAC1B,EAAK8C,SAAS,CAACzB,gBAAiBa,EAAOZ,eAAgBuC,EAAMtC,eAAgBuC,KAE7E,EAAKhB,SAAL,eAAiBnC,EAASX,K,EAIhCyC,Q,uCAAU,WAAMuB,GAAN,eAAAxB,EAAA,2DAC+ByB,GAAnCC,aAAaC,QAAQ,YAA8D,MAAnCD,aAAaC,QAAQ,YAEhEC,KAAKC,MAAMH,aAAaC,QAAQ,YAAYH,OAASA,EAD5DM,IAAQC,KAAK,iBAKTxD,EAAYqD,KAAKC,MAAMH,aAAaC,QAAQ,YAChDxB,QAAQC,IAAI,YAAa7B,GACzB,EAAK+B,SAAS,CAAC/B,UAAWA,KATpB,2C,wDAcV2B,e,sBAAiB,sBAAAF,EAAA,2IAKIU,IAAMC,KAAKC,IAAW,CACbC,MANb,wEAQcC,KAHV,+BAAAd,EAAA,MAGe,WAAMe,GAAN,eAAAf,EAAA,yDAEFgC,EAAMjB,EAAOlB,KAAKmB,SAASiB,KAI/B9B,QAAQC,IAAI,kBAAmB4B,GAC/B7B,QAAQC,IAAI,eAAgB4B,EAAIE,QACd,IAAdF,EAAIE,OARF,yCASK,IATL,OAWF,EAAK5B,SAAS,CAACT,KAAMmC,IAXnB,2CAHf,uDA4CQd,OAAM,SAAAC,GAEL,OADAhB,QAAQC,IAAI,WAAYe,GACjB,MAnDpB,yD,EAwDjBxD,aAAe,SAAAD,GACb,IAAIF,EAAQE,EAAEyE,OAAO3E,MACjBqC,EAAO,EAAK1B,MAAM0B,KAClBC,EAAe,EAAK3B,MAAM2B,aAC9B,EAAKQ,SAAS,CAAE9C,UAEZA,EAAM0E,SACRpC,EAAeD,EAAKuC,QAAO,SAAAC,GAEzB,IAAIC,EACFD,EAAKrE,GAAGuE,cAAcC,WAAWhF,EAAM+E,gBACvCF,EAAK1C,gBAAgB4C,cAAcC,WAAWhF,EAAM+E,eAMlDE,EACFJ,EAAKrE,GAAGuE,cAAcG,SAASlF,EAAM+E,gBACrCF,EAAK1C,gBAAgB4C,cAAcG,SAASlF,EAAM+E,eAOpD,OAAID,KAEQA,GAAuBG,EAC1BA,EACK,SAEhB,EAAKnC,SAAS,CAAER,mB,EAIpB6C,O,uCAAS,WAAM9C,EAAM7B,EAAIC,GAAhB,SAAA+B,EAAA,sDAEPG,QAAQC,IAAI,cAAeP,GAFpB,2C,sGAST,WAAU,IAAD,OACP,EAA6C+C,KAAKzE,MAA5C0B,EAAN,EAAMA,KAAMT,EAAZ,EAAYA,QAAS5B,EAArB,EAAqBA,MAAOsC,EAA5B,EAA4BA,aAC5B,OACI,oCACI,kBAAC+C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,oBAEA,kBAACC,EAAA,EAAD,CAAU/F,UAAU,eACpB,kBAAC,IAAD,CACIA,UAAU,mBACV4C,KAAMrC,EAAM0E,OAASpC,EAAeD,EACpCT,QAASA,EACT6D,UAAQ,EACRC,YAAU,EACVC,WAAS,EACTC,mBACA,kBAAC,EAAD,CAAc5F,MAAOA,EAAOG,aAAciF,KAAKjF,aAAcL,cAAesF,KAAKtF,oBAY7F,kBAAC+F,EAAA,EAAD,CACEC,OAAQV,KAAKzE,MAAMK,MACnB+E,OAAQX,KAAKhD,YACb3C,UAAU,yBAEV,kBAACuG,EAAA,EAAD,CAAaD,OAAQX,KAAKhD,YAAa3C,UAAU,cAAjD,wBAGA,kBAACwG,EAAA,EAAD,CAAWxG,UAAU,yBAEX,kBAACyG,EAAA,EAAD,CAAOC,IAAI,WAAX,mBACA,kBAACpG,EAAA,EAAD,CACE+D,KAAK,OACLjC,KAAK,UACLrB,GAAG,UACH4F,YAAY,aACZpG,MAAOoF,KAAKzE,MAAMO,eAClBjB,SAAU,SAACoG,GAAD,OAAO,EAAKvD,SAAS,CAAC5B,eAAgBmF,EAAI1B,OAAO3E,YAKvE,kBAACsG,EAAA,EAAD,KACE,kBAAC5G,EAAA,EAAD,CAAQE,MAAM,UAAUC,QAASuF,KAAKxB,gBAAtC,yBAEU,MAId,kBAACiC,EAAA,EAAD,CACEC,OAAQV,KAAKzE,MAAMM,SACnB8E,OAAQX,KAAKvC,eACbpD,UAAU,yBAEV,kBAACuG,EAAA,EAAD,CAAaD,OAAQX,KAAKvC,eAAgBpD,UAAU,cAApD,qBAGA,kBAACwG,EAAA,EAAD,CAAWxG,UAAU,yBAEX,kBAACyG,EAAA,EAAD,CAAOC,IAAI,WAAX,mBACA,kBAACpG,EAAA,EAAD,CACE+D,KAAK,OACLjC,KAAK,UACLrB,GAAG,UACH4F,YAAY,kBACZpG,MAAOoF,KAAKzE,MAAMQ,kBAClBlB,SAAU,SAACoG,GAAD,OAAO,EAAKvD,SAAS,CAAC3B,kBAAmBkF,EAAI1B,OAAO3E,YAK1E,kBAACsG,EAAA,EAAD,KACE,kBAAC5G,EAAA,EAAD,CAAQE,MAAM,UAAUC,QAASuF,KAAKpC,mBAAtC,qBAEU,MAId,kBAAC,IAAD,CAAYc,KAAMsB,KAAKzE,MAAMY,eAAgBW,MAAOkD,KAAKzE,MAAMU,gBAC7DkF,KAAMnB,KAAKzE,MAAMS,aACjBoF,UAAW,kBAAM,EAAKzC,YAAY,gBAAgB,KAEhD,uBAAGtE,UAAU,oBACV2F,KAAKzE,MAAMW,iBAIlB,kBAAC,IAAD,CAAYwC,KAAMsB,KAAKzE,MAAMgB,sBAAuBO,MAAOkD,KAAKzE,MAAMc,uBACpE8E,KAAMnB,KAAKzE,MAAMa,oBACjBgF,UAAW,kBAAM,EAAK/C,mBAAmB,uBAAuB,KAE9D,uBAAGhE,UAAU,oBACV2F,KAAKzE,MAAMe,6B,GA5ZI+E,IAAMC,WCrD9BC,E,kDACJ,WAAYnH,GAAO,IAAD,8BACd,cAAMA,IASVoH,eAVkB,uCAUD,WAAMC,EAAUC,GAAhB,eAAAtE,EAAA,yDACC,OAAZqE,EADW,gCAEL,EAAK/D,SAAS,CAACiE,SAAS,EAAMC,UAAU,IAFnC,iCAGO,QAAZH,EAHK,wBAKTI,EAAMH,EALG,SAOP,EAAKhE,SAAS,CAACiE,SAAS,EAAOC,UAAU,EAAME,SAAUD,IAPlD,gDAUL,EAAKnE,SAAS,CAACiE,SAAS,EAAOC,UAAU,IAVpC,4CAVC,wDAEd,EAAKrG,MAAQ,CACXoG,SAAS,EACTC,UAAU,EACVE,SAAU,MALE,E,0CAwBlB,WACE,OACE,kBAAC,IAAMC,SAAP,KACM,kBAAC,IAAD,CACIC,gBAAgB,aAChBC,iBAAiB,OACjBC,iBAAiB,eAEzB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MAON,kBAAC,EAAD,iBAAqBrC,KAAKzE,MAAWyE,KAAK5F,MAA1C,CAAiDoH,eAAgBxB,KAAKwB,yB,GAzCrDH,IAAMC,WAkDpBC","file":"static/js/156.fcd72fb9.chunk.js","sourcesContent":["import React from \"react\"\nimport { api_query } from \"../../../api/ApiConstant\"\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Badge,\n  FormGroup,\n  Input,\n  Button, Label, Modal, ModalHeader, ModalBody, ModalFooter, Alert\n\n} from \"reactstrap\"\nimport Select from \"react-select\"\nimport DataTable from \"react-data-table-component\"\nimport { Star, Search,\n    Edit,\n    Trash,\n    ChevronDown,\n    Plus,\n    Check,\n    ChevronLeft,\n    ChevronRight } from \"react-feather\"\nimport axios from 'axios'\nimport { history } from \"../../../../src/history\"\nimport Toggle from \"react-toggle\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\n\n\nconst CustomHeader = props => {\n  return (\n    <div className=\"d-flex flex-wrap justify-content-between\">\n      {/* <div className=\"d-flex flex-wrap justify-content-end\"> */}\n      <div className=\"add-new\">\n        <Button.Ripple color=\"none\" className=\"bg-gradient-success\" onClick={() => props.departemenAdd()}>Tambah Departemen</Button.Ripple>\n      </div>\n      <div className=\"position-relative has-icon-left mb-1\">\n        <Input value={props.value} onChange={e => props.handleFilter(e)} />\n        <div className=\"form-control-position\">\n          <Search size=\"15\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n  const ActionsComponent = props => {\n    return (\n      <div className=\"data-list-action\">\n        <Button.Ripple className=\"mr-1 bg-gradient-success\" color=\"none\" size=\"sm\"\n          onClick={()=> {\n            // console.log('props : ', props);\n            return props.isView(props.row, props.row.id, props.row.cff_id)\n          }}>View</Button.Ripple>\n      </div>\n    )\n  }\n\n\n\nclass DepartemenTable extends React.Component {\n  state = {\n    modalVisible: false,\n    modalImage: '',\n    modalDigimonName: '',\n    myProfile: null,\n    modal: false,\n    modalAdd: false,\n    id: 0,\n    namaDepartemen: '',\n    namaDepartemenAdd: '',\n    isSweetAlert: false,\n    sweetAlertTitle: 'Judul',\n    sweetAlertText: 'Text',\n    sweetAlertType: 'warning',\n    isSweetAlertConfirm: false,\n    sweetAlertTitleConfirm: 'Judul',\n    sweetAlertTextConfirm: 'Text',\n    sweetAlertTypeConfirm: 'warning',\n  columns: [\n      {\n        name: \"Id\",\n        selector: \"id\",\n        sortable: true,\n        minWidth: \"200px\",\n        cell: row =>\n        (\n          <div className=\"d-flex flex-xl-row flex-column align-items-xl-center align-items-start py-xl-0 py-1\">\n            <div className=\"user-info text-truncate ml-xl-50 ml-0\">\n              <span\n                title={row.id}\n                className=\"d-block text-bold-500 text-truncate mb-0\">\n                {row.id}\n                {/* {row.tema} */}\n              </span>\n            </div>\n          </div>\n        )\n      },\n      {\n        name: \"Nama Departemen\",\n        selector: \"nama_departemen\",\n        sortable: true,\n        minWidth: \"200px\",\n        cell: row => (\n          <div className=\"d-flex flex-xl-row flex-column align-items-xl-center align-items-start py-xl-0 py-1\">\n            <div className=\"user-info text-truncate ml-xl-50 ml-0\">\n              <span\n                title={row.nama_departemen}\n                className=\"d-block text-bold-500 text-truncate mb-0\">\n                {row.nama_departemen}\n              </span>\n            </div>\n          </div>\n        )\n      },\n      {\n        name: \"Actions\",\n        sortable: true,\n        cell: row =>\n        (\n          <>\n            <ActionsComponent\n              row={row}\n              isView={this.toggleModal}\n            />\n          </>\n        )\n      }\n    ],\n    data: [],\n    filteredData: [],\n    value: \"\"\n  }\n\n  componentDidMount=async()=>{\n    await this.isLogin('super_admin');\n    await this.tarikDataTable();\n\n    // await this.tarikData();\n    // await this.tarikDataPostgre();\n\n    // console.log('state data:', typeof(this.state.data))\n    // console.log('local', JSON.parse(localStorage.getItem('account')).role)\n\n  }\n\n  departemenAdd = async()=>{\n    console.log('Depatemen Add')\n    await this.toggleModalAdd();\n  }\n\n  toggleModalAdd = (data, id) => {\n    // this.setState(prevState => ({\n    //   modal: !prevState.modal\n    // }))\n\n    this.setState(prevState => ({\n      modalAdd: !prevState.modalAdd,\n    }))\n  }\n\n  toggleModalAddFix = async() => {\n    this.setState(prevState => ({\n      modalAdd: !prevState.modalAdd\n    }))\n\n    let sql = `\n        insert into df_master_departement(nama_departemen)\n        values('`+this.state.namaDepartemenAdd+`')\n    `\n      console.log('sql : ', sql)\n\n      var result = await axios.post(api_query, {\n                                  query : sql\n                              })\n                                  .then(async(result) => {\n                                  let res = result.data.response\n                                  // Beda dgn sweetAlert yg lain\n                                  return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil tambah departemen', 'success')\n                                  // this.props.changeViewPage('page')\n                              }).catch(async(err) => {\n                                  console.log('error : ', err)\n                                  return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal tambah nama departemen', 'danger')\n                                  // return []\n                        })\n  }\n\n  toggleModal = (data, id) => {\n    // this.setState(prevState => ({\n    //   modal: !prevState.modal\n    // }))\n\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      namaDepartemen: data.nama_departemen,\n      id: data.id\n    }))\n  }\n\n  toggleModalFix = async() => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n\n    let sql = `\n        update df_master_departement\n        set\n        nama_departemen = '`+this.state.namaDepartemen+`',\n        update_date = now()\n        where id = `+this.state.id+`\n    `\n      console.log('sql : ', sql)\n\n      var result = await axios.post(api_query, {\n                                  query : sql\n                              })\n                                  .then(async(result) => {\n                                  let res = result.data.response\n                                  // Beda dgn sweetAlert yg lain\n                                  return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Success', 'Berhasil ganti nama departemen', 'success')\n                                  // this.props.changeViewPage('page')\n                              }).catch(async(err) => {\n                                  console.log('error : ', err)\n                                  return await this.handleAlertConfirm('isSweetAlertConfirm', true, 'Danger', 'Gagal ganti nama departemen', 'danger')\n                                  // return []\n                        })\n  }\n\n  handleAlertConfirm = async(state, value, title, text, type) => {\n\n    if (value) {\n      this.setState({ [state] : value })\n      this.setState({sweetAlertTitleConfirm: title, sweetAlertTextConfirm: text, sweetAlertTypeConfirm: type});\n    }else{\n      this.setState({ [state] : value })\n      await this.tarikDataTable();\n\n      // this.props.changeViewPage('page')\n  }\n    // if(text == \"Berhasil membuat SS\"){\n    //   this.setState({ [state] : value })\n    //   this.setState({sweetAlertTitle: title, sweetAlertText: text, sweetAlertType: type});\n    //   // this.props.changeViewPage('page')\n    // }else{}\n  }\n\n  handleAlert = (state, value, title, text, type) => {\n      if (value) {\n        this.setState({ [state] : value })\n        this.setState({sweetAlertTitle: title, sweetAlertText: text, sweetAlertType: type});\n      }else{\n        this.setState({ [state] : value })\n      }\n  }\n\n  isLogin = async(role) =>{\n    if (localStorage.getItem('account') == undefined || localStorage.getItem('account') == null) {\n      history.push(\"/pages/login\")\n    }else if(JSON.parse(localStorage.getItem('account')).role !== role){\n      history.push(\"/pages/login\")\n    }\n    else{\n      var myProfile = JSON.parse(localStorage.getItem('account'))\n      console.log('myProfile', myProfile)\n      this.setState({myProfile: myProfile})\n    }\n  }\n\n\n  tarikDataTable = async() =>{\n\n    let sql = `\n        select * from df_master_departement order by id asc\n    `\n    var result = await axios.post(api_query, {\n                                query : sql\n                            })\n                                .then(async(result) => {\n                                // let res = result.data.response\n                                var res = result.data.response.rows\n\n                                // console.log('result : ', result)\n                                // console.log('result postgres : ', result)\n                                console.log('result query : ', res)\n                                console.log('query leng :', res.length)\n                                if (res.length == '') {\n                                    return []\n                                }else{\n                                    this.setState({data: res})\n                                }\n\n                                // else{\n                                //   var _temp = []\n\n                                //   for (let index = 0; index < res.length; index++) {\n                                //     const element = res[index].tema;\n                                //     var temaSingkat = element.split(' ').slice(0,2).join(' ')\n                                //     temaSingkat = temaSingkat + ' ... '\n\n                                //     var tema = res[index];\n                                //     tema.tema_singkat = temaSingkat\n\n                                //     // console.log('dummy : ', dummy)\n\n                                //     // // const elementTgl = res[index].tanggal_dibuat;\n                                //     // // var tgl = elementTgl.split('T')\n                                //     // console.log('tgl query : ', res[index].tgl)\n\n                                //     // console.log('tema singkat : ', temaSingkat)\n                                //     // // console.log('tanggal : ', tgl[0])\n                                //     // console.log('element:', element)\n\n                                //     _temp.push(tema)\n\n                                //   }\n\n                                //   await this.setState({data: _temp})\n                                // }\n                            }).catch(err => {\n                                console.log('error : ', err)\n                                return []\n                            })\n      // await this.setState({data: result})\n    }\n\n  handleFilter = e => {\n    let value = e.target.value\n    let data = this.state.data\n    let filteredData = this.state.filteredData\n    this.setState({ value })\n\n    if (value.length) {\n      filteredData = data.filter(item => {\n        // console.log('ITEM : ', item)\n        let startsWithCondition =\n          item.id.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.nama_departemen.toLowerCase().startsWith(value.toLowerCase())\n          // item.name.toLowerCase().startsWith(value.toLowerCase())\n          // item.date.toLowerCase().startsWith(value.toLowerCase()) ||\n          // item.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          // item.revenue.toLowerCase().startsWith(value.toLowerCase()) ||\n          // item.status.toLowerCase().startsWith(value.toLowerCase())\n        let includesCondition =\n          item.id.toLowerCase().includes(value.toLowerCase()) ||\n          item.nama_departemen.toLowerCase().includes(value.toLowerCase())\n          // item.name.toLowerCase().includes(value.toLowerCase())\n          // item.date.toLowerCase().includes(value.toLowerCase()) ||\n          // item.email.toLowerCase().includes(value.toLowerCase()) ||\n          // item.revenue.toLowerCase().includes(value.toLowerCase()) ||\n          // item.status.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) {\n          return startsWithCondition\n        } else if (!startsWithCondition && includesCondition) {\n          return includesCondition\n        } else return null\n      })\n      this.setState({ filteredData })\n    }\n  }\n\n  viewSS = async(data, id, cff_id) =>{\n    // console.log('view SS : ', id)\n    console.log('data row : ', data)\n\n\n\n    // this.props.changeViewPage('edit', data, id)\n  }\n\n  render() {\n    let { data, columns, value, filteredData } = this.state\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                <CardTitle>Departemen</CardTitle>\n                </CardHeader>\n                <CardBody className=\"rdt_Wrapper\">\n                <DataTable\n                    className=\"dataTable-custom\"\n                    data={value.length ? filteredData : data}\n                    columns={columns}\n                    noHeader\n                    pagination\n                    subHeader\n                    subHeaderComponent={\n                    <CustomHeader value={value} handleFilter={this.handleFilter} departemenAdd={this.departemenAdd}/>\n                    // <CustomHeader value={value} handleFilter={this.handleFilter} tarikData={this.tarikDataTable}/>\n                    }\n                />\n                </CardBody>\n            </Card>\n            {/* <ModalDigimon {...this.state} {...this.props}\n                        // modalImage={this.state.modalImage}\n                        // modalVisible={this.state.modalVisible}\n                        toggleModal={this.toggleModalDigimon}></ModalDigimon> */}\n\n                      {/* Approve */}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n          className=\"modal-dialog-centered\"\n        >\n          <ModalHeader toggle={this.toggleModal} className=\"bg-success\">\n            Edit Nama Departemen\n          </ModalHeader>\n          <ModalBody className=\"modal-dialog-centered\">\n                  {/* <FormGroup> */}\n                    <Label for=\"catatan\">Nama Departemen</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"catatan\"\n                      id=\"catatan\"\n                      placeholder=\"Catatan CC\"\n                      value={this.state.namaDepartemen}\n                      onChange={(val)=>this.setState({namaDepartemen: val.target.value})}\n                      // required\n                    />\n                  {/* </FormGroup> */}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" onClick={this.toggleModalFix}>\n              Ganti nama departemen\n            </Button>{\" \"}\n          </ModalFooter>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.modalAdd}\n          toggle={this.toggleModalAdd}\n          className=\"modal-dialog-centered\"\n        >\n          <ModalHeader toggle={this.toggleModalAdd} className=\"bg-success\">\n            Tambah Departemen\n          </ModalHeader>\n          <ModalBody className=\"modal-dialog-centered\">\n                  {/* <FormGroup> */}\n                    <Label for=\"catatan\">Nama Departemen</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"catatan\"\n                      id=\"catatan\"\n                      placeholder=\"Nama Departemen\"\n                      value={this.state.namaDepartemenAdd}\n                      onChange={(val)=>this.setState({namaDepartemenAdd: val.target.value})}\n                      // required\n                    />\n                  {/* </FormGroup> */}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" onClick={this.toggleModalAddFix}>\n              Tambah departemen\n            </Button>{\" \"}\n          </ModalFooter>\n        </Modal>\n\n        <SweetAlert type={this.state.sweetAlertType} title={this.state.sweetAlertTitle}\n          show={this.state.isSweetAlert}\n          onConfirm={() => this.handleAlert(\"isSweetAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              {this.state.sweetAlertText}\n            </p>\n        </SweetAlert>\n\n        <SweetAlert type={this.state.sweetAlertTypeConfirm} title={this.state.sweetAlertTitleConfirm}\n          show={this.state.isSweetAlertConfirm}\n          onConfirm={() => this.handleAlertConfirm(\"isSweetAlertConfirm\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              {this.state.sweetAlertTextConfirm}\n            </p>\n        </SweetAlert>\n      </>\n    )\n  }\n}\n\nexport default DepartemenTable\n","import React from \"react\"\nimport { Row, Col, Spinner } from \"reactstrap\"\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport axios from 'axios';\nimport { api_query } from \"../../../api/ApiConstant\"\nimport DepartemenTable from \"./DepartemenTable\";\n// import MstdApprovalSsTable from \"./MstdApprovalSsTable\";\n// import MstdApprovalSsView from \"./component/MstdApprovalSsView\";\n\n\nclass DepartemenPage extends React.Component {\n  constructor(props){\n      super(props);\n      this.state = {\n        addPage: false,\n        editPage: false,\n        editData: null,\n\n      }\n  }\n\n  changeViewPage = async(typeView, resultEdit) =>{\n    if (typeView == 'add') {\n        await this.setState({addPage: true, editPage: false})\n    }else if (typeView == 'edit') {\n      //\n      var tmp = resultEdit\n      // console.log('new data tmp : ', tmp)\n      await this.setState({addPage: false, editPage: true, editData: tmp})\n    }\n    else{\n        await this.setState({addPage: false, editPage: false})\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n            <Breadcrumbs\n                breadCrumbTitle=\"Departemen\"\n                breadCrumbParent=\"Data\"\n                breadCrumbActive=\"Departemen\"\n            />\n        <Row>\n          <Col sm=\"12\">\n            {/* {this.state.editPage ?\n                <MstdApprovalSsView {...this.state} {...this.props} changeViewPage={this.changeViewPage}/>\n              :\n                <MstdApprovalSsTable {...this.state} {...this.props} changeViewPage={this.changeViewPage}/>\n            } */}\n\n            <DepartemenTable {...this.state} {...this.props} changeViewPage={this.changeViewPage}/>\n\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default DepartemenPage\n"],"sourceRoot":""}